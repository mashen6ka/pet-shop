version: "3.5"

services:
  # nginx:
  #   image: nginx:alpine
  #   depends_on:
  #     - server
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  #     - ./packages/server/static/:/usr/share/nginx/html/

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: marislepokurova@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 501110
    ports:
      - "3000:80"
    volumes:
      - pgadmin:/var/lib/pgadmin

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "swagger-ui"
    ports:
      - "8082:8080"
    volumes:
      - ./swagger/openapi.json:/openapi.json
    environment:
      SWAGGER_JSON: /openapi.json

  nginx:
    build:
      context: .
      dockerfile: docker/Dockerfile.nginx
    depends_on:
      - server
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ~/localhost.crt:/var/nginx/certs/localhost.crt
      - ~/localhost.key:/var/nginx/certs/localhost.key

  postgres:
    image: postgres:alpine
    environment:
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    restart: unless-stopped

  server:
    build:
      context: .
      dockerfile: docker/Dockerfile.server
    depends_on:
      - postgres
      - migrations
    deploy:
      replicas: 3

  server-mirror:
    build:
      context: .
      dockerfile: docker/Dockerfile.server
    depends_on:
      - postgres
      - migrations

  migrations:
    build:
      context: .
      dockerfile: docker/Dockerfile.server
    depends_on:
      - postgres
    entrypoint: node migrate.js

  tests:
    build:
      context: .
      dockerfile: docker/Dockerfile.tests
    depends_on:
      - server

volumes:
  postgres:
  pgadmin:
